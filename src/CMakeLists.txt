cmake_minimum_required (VERSION 3.13.4)
PROJECT (POLARIS
    VERSION 4.12.00
    DESCRIPTION "POLARIS: POLArized RadIation Simulator, Copyright (C) 2018 Stefan Reissl"
    HOMEPAGE_URL "https://portia.astrophysik.uni-kiel.de/polaris/"
    LANGUAGES CXX
    )

SET (CMAKE_CXX_STANDARD 11)
SET (CXX_STANDARD_REQUIRED ON)

SET (PROJECT_PATH ${CMAKE_CURRENT_LIST_DIR}/../)

OPTION(BUILD_SHARED_LIBS "Build Shared Libraries" ON)

SET (LIB_TYPE SHARED)
#SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -MMD -MP -MF -ansi")
IF(NOT BUILD_SHARED_LIBS)
    SET (LIB_TYPE STATIC)
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++ -static")
ENDIF(NOT BUILD_SHARED_LIBS)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

FIND_PACKAGE (CCFITS REQUIRED)
FIND_PACKAGE (OpenMP REQUIRED)

SET (SRC_FILES CommandParser.cpp Cylindrical.cpp Dust.cpp
    Faddeeva.cc Grid.cpp GasSpecies.cpp OcTree.cpp OPIATE.cpp
    Pipeline.cpp RadiativeTransfer.cpp Source.cpp Spherical.cpp
    Voronoi.cpp Synchrotron.cpp Surface.cpp
)

ADD_EXECUTABLE (polaris main.cpp ${SRC_FILES})
TARGET_LINK_LIBRARIES (polaris PRIVATE OpenMP::OpenMP_CXX ${CCFITS_LIBRARY} ${CFITSIO_LIBRARY})
TARGET_INCLUDE_DIRECTORIES (polaris PRIVATE ${CMAKE_CURRENT_LIST_DIR} ${CFITSIO_INCLUDE_DIR})
INSTALL (TARGETS polaris)

INCLUDE (CTest)
if(BUILD_TESTING)
    ADD_EXECUTABLE (tests tests.cpp MathFunctions_t.cpp Dust_t.cpp ${SRC_FILES})
    TARGET_LINK_LIBRARIES (tests PRIVATE OpenMP::OpenMP_CXX ${CCFITS_LIBRARY} ${CFITSIO_LIBRARY})
    TARGET_INCLUDE_DIRECTORIES (tests PRIVATE ../ext ${CMAKE_CURRENT_LIST_DIR} ${CFITSIO_INCLUDE_DIR})
    # allow user to run tests with `make test` or `ctest`
    INCLUDE(Catch.cmake)
    catch_discover_tests(tests)
endif()
